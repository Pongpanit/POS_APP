@model IEnumerable<POS_APP.Models.Category>

@{
    ViewData["Title"] = "Products";
}

<h2 class="text-success">Product Categories</h2>

<a asp-action="CreateCategory" class="btn btn-success mb-3">+ Add Category</a>

@foreach (var category in Model)
{
    <div class="card mb-4">
        <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">@category.Name</h5>
            <div>
                <a asp-action="CreateProduct" asp-route-categoryId="@category.CategoryId" class="btn btn-sm btn-light">New</a>
                <a asp-action="EditCategory" asp-route-id="@category.CategoryId" class="btn btn-sm btn-light">Edit</a>
                <form asp-action="DeleteCategory" asp-route-id="@category.CategoryId" method="post" class="d-inline"
                      onsubmit="return confirm('Are you sure you want to delete this category?');">
                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                </form>
            </div>
        </div>

        <div class="card-body">
            @if (category.Products.Any())
            {
                <div class="scroll-container" onmousedown="startDrag(event, this)">
                    @foreach (var product in category.Products)
                    {
                        <div class="card me-3" style="min-width: 250px; max-width: 250px;">
                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl" alt="@product.Name"
                                     class="card-img-top" style="height:180px; object-fit:cover;" />
                            }
                            <div class="card-body d-flex flex-column" style="height: 190px;">
                                <div class="flex-grow-1">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="text-muted">@product.Description</p>
                                </div>
                                <div>
                                    <p class="fw-bold text-success mb-2">@product.Price.ToString("C")</p>
                                    <div class="d-flex justify-content-between">
                                        <a asp-action="EditProduct" asp-route-id="@product.ProductId" class="btn btn-sm btn-primary">Edit</a>
                                        <form asp-action="DeleteProduct" asp-route-id="@product.ProductId" method="post" class="d-inline"
                                              onsubmit="return confirm('Are you sure you want to delete this product?');">
                                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">No products yet</p>
            }
        </div>
    </div>
}

<!-- ✅ CSS -->
<style>
    .scroll-container {
        display: flex;
        overflow-x: auto;
        gap: 1rem;
        padding-bottom: 10px;
        cursor: grab;
        scrollbar-width: none; /* Firefox */
    }

        .scroll-container:active {
            cursor: grabbing;
        }

        .scroll-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari */
        }
</style>

<!-- ✅ JS Drag Scroll -->
<script>
    let isDown = false;
    let startX;
    let scrollLeft;

    function startDrag(e, container) {
        isDown = true;
        container.classList.add('active');
        startX = e.pageX - container.offsetLeft;
        scrollLeft = container.scrollLeft;

        document.onmouseup = () => {
            isDown = false;
            container.classList.remove('active');
        };
        document.onmousemove = (ev) => {
            if (!isDown) return;
            ev.preventDefault();
            const x = ev.pageX - container.offsetLeft;
            const walk = (x - startX) * 2; // scroll speed
            container.scrollLeft = scrollLeft - walk;
        };
    }
</script>
